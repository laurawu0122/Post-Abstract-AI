import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.385ac4c3.js";const p="/img/advanced.png",_=JSON.parse('{"title":"配置参数","description":"","frontmatter":{},"headers":[],"relativePath":"parameters.md","filePath":"parameters.md","lastUpdated":1713419576000}'),t={name:"parameters.md"},o=l('<h1 id="配置参数" tabindex="-1">配置参数 <a class="header-anchor" href="#配置参数" aria-label="Permalink to &quot;配置参数&quot;">​</a></h1><p>TianliGPT可以配置你想要的参数。</p><p>以下都是可选变量，如果能正常运行，可以不填写。添加方式就是在填写key的那一段代码的<code>&lt;/script&gt;</code>之前添加即可。</p><p><img src="'+p+`" alt=""></p><p>例如：</p><div class="language-HTML vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">HTML</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> tianliGPT_wordLimit </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2000</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> tianliGPT_postURL </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;*/p/*&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> tianliGPT_postSelector </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;</span><span style="color:#79B8FF;">\\#</span><span style="color:#9ECBFF;">article-container&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> tianliGPT_key </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;这是你的key&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> tianliGPT_wordLimit </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2000</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> tianliGPT_postURL </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;*/p/*&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> tianliGPT_postSelector </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;</span><span style="color:#005CC5;">\\#</span><span style="color:#032F62;">article-container&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> tianliGPT_key </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;这是你的key&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><h3 id="tianligpt-posturl" tabindex="-1">tianliGPT_postURL <a class="header-anchor" href="#tianligpt-posturl" aria-label="Permalink to &quot;tianliGPT_postURL&quot;">​</a></h3><p>当主题存在其他页面和文章页面结构相同时，可以通过通配符url域名来实现只在指定域名中执行。</p><p>例如：<code>let tianliGPT_postURL = &#39;*/p/*&#39;;</code></p><p>只会在地址含有<code>/p/</code>的域名中执行。避免非文章页面添加。</p><h3 id="tianligpt-blacklist" tabindex="-1">tianliGPT_blacklist <a class="header-anchor" href="#tianligpt-blacklist" aria-label="Permalink to &quot;tianliGPT_blacklist&quot;">​</a></h3><p>当你有一些页面不想要使用文章摘要，那么你可以将所有的黑名单放入一个json文件中。例如<code>blacklist.json</code></p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;blackurls&quot;</span><span style="color:#E1E4E8;">: [</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;https://example.com/somepath/*&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;https://*.example.com/&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;https://www.example.org/specificpage.html&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;http://127.0.0.1:5500/dev.html&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  ]</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;blackurls&quot;</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;https://example.com/somepath/*&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;https://*.example.com/&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;https://www.example.org/specificpage.html&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;http://127.0.0.1:5500/dev.html&quot;</span></span>
<span class="line"><span style="color:#24292E;">  ]</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>然后添加<code>tianliGPT_blacklist</code>变量，将json文件的地址放入进去，例如：</p><p><code>let tianliGPT_blacklist = &#39;https://example.com/blacklist.json&#39;</code></p><h3 id="tianligpt-wordlimit" tabindex="-1">tianliGPT_wordLimit <a class="header-anchor" href="#tianligpt-wordlimit" aria-label="Permalink to &quot;tianliGPT_wordLimit&quot;">​</a></h3><p>⚠️危险：更改此变量损失已消耗过的key，因为你提交的内容发生了变化。</p><p>可以设置提交的字数限制，默认为1000字。这意味着每个文章最多消耗你1000字符（因为只有提交扣费，生成文本不扣费）。你可以降低字符数来让扣费变得更少，也可以增加字符数让文章变得更准确。上限为5000，超过5000字符将被截断。</p><p>例如：<code>let tianliGPT_wordLimit = 1000;</code></p><h3 id="tianligpt-typinganimate" tabindex="-1">tianliGPT_typingAnimate <a class="header-anchor" href="#tianligpt-typinganimate" aria-label="Permalink to &quot;tianliGPT_typingAnimate&quot;">​</a></h3><p>当此变量为false时，那么不执行打字动画。</p><p>例如：<code>let tianliGPT_typingAnimate = false;</code></p><h3 id="tianligpt-title" tabindex="-1">tianliGPT_Title <a class="header-anchor" href="#tianligpt-title" aria-label="Permalink to &quot;tianliGPT_Title&quot;">​</a></h3><p>当设置此变量后，TianGPT顶部的名称“AI摘要”可以被修改。</p><p>例如：<code>let tianliGPT_Title = &#39;宇宙无敌智能摘要&#39;;</code></p>`,25),e=[o];function c(i,r,E,y,d,h){return a(),n("div",null,e)}const u=s(t,[["render",c]]);export{_ as __pageData,u as default};
